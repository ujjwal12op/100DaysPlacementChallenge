Day9 : 27/01/24

Q1) Palindrom Substrings 

class Solution {
    public int countSubstrings(String s) {
        int count = 0;

        for(int i = 0 ;i<s.length();i++)
        {
            // Odd count
            count+=expand(s,i,i);
            //Even count
            count+=expand(s,i,i+1);
        }
        return count;
    }

    private int expand(String s,int left,int right)
    {
        int count=0;
        while(left>=0 && right<s.length() && s.charAt(left)==s.charAt(right))
        {
            count++;
            left--;
            right++;
        }
        return count;
    }
}

Q2) Diagonal Traverse

class Solution {
    public int[] findDiagonalOrder(int[][] mat) {
        int m = mat.length;
        int n = mat[0].length;

        int row = 0;
        int col = 0;

        int[] ans = new int[n * m];
        int index = 0;

        boolean up = true;

        while (row < m && col < n) {
            if (up == true) {
                while (row > 0 && col < n - 1) {
                    ans[index++] = mat[row][col];
                    row--;
                    col++;
                }
                ans[index++] = mat[row][col];
                if (col == n - 1) {
                    row++;
                } else {
                    col++;
                }
            } else {
                while (row < m - 1 && col > 0) {
                    ans[index++] = mat[row][col];
                    row++;
                    col--;
                }
                ans[index++] = mat[row][col];
                if (row == m - 1) {
                    col++;
                } else {
                    row++;
                }
            }
            up = !up;
        }
        return ans;
    }
}
